import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { ethers } from "ethers";
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import { useState } from 'react';
import { abi , address } from '../constants/index'
import { set } from '@project-serum/anchor/dist/cjs/utils/features';
export default function Home() {
  const [signer,setSigner] = useState(null);
  const [contract,setContract] = useState(null);
  const [owner ,setOwner] = useState(false);
  const [amount,setAmount] = useState(0);
  const [claimamount,setClaimAmount] = useState(0);
  const connect = async () => {
    try{
      const provider = new ethers.providers.Web3Provider(window.ethereum)
      await provider.send("eth_requestAccounts", []);
      const signer = provider.getSigner()
      setSigner(signer);
      const contract = new ethers.Contract(address,abi,signer)
      setOwner((await (signer.getAddress())).toLowerCase() === (await contract.owner()).toLowerCase())
      setContract(contract);
      const amount = await contract.balanceOf(await signer.getAddress());
      setAmount(ethers.utils.formatEther(amount));
      const claimamount = await contract.claimableBalance();
      setClaimAmount(ethers.utils.formatEther(claimamount));
    }
    catch(e){
      alert(e);
    }
  }

  const add = async () => {
    try{
      let address = document.getElementById("address").value;
      const tx = await contract.addAddress(address);
      await tx.wait();
      toast("Added");
    }
    catch(e){
      alert(e);
    }
  }

  const claim = async () => {
    try{
      const tx = await contract.claim();
      await tx.wait();
      toast("Claimed");
    }
    catch(e){
      alert(e);
    }
  }
  return (
    <div className=''>
      <Head>
        <title>Vesting Token</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
    <div>
      <div className='flex flex-row-reverse mx-60 my-6'>
        {
          signer === null ?  
          <button onClick={connect} className='p-3 bg-violet-300 rounded-lg'>Connect</button>
          :
          <button className='p-3 rounded-lg bg-violet-300'>Connected</button>
        }
      </div>
      <div className='flex flex-col justify-center gap-5'>
        {
          owner && 
          <div className='flex flex-col items-center gap-5'>
            <input type="string" id="address" className="h-10 w-96 focus:outline-none" placeholder="Enter address"></input>
            <button className='p-3 rounded-lg bg-violet-500 text-white w-20' onClick={add}>Add</button>
          </div>
          
        }     
        <div className='flex flex-col gap-3 items-center'>
          <p>Tokens Claimed : {amount}</p>
          <p>Available for Claiming : {claimamount}</p>
          <button className='p-2 rounded-lg bg-violet-500 text-white w-20' onClick={claim}>Claim</button>
        </div>
      </div>
      
      <ToastContainer />
    </div>
    </div>
  )
}
